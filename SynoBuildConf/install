#!/bin/bash

PKG_NAME="virtualbox4dsm"
INST_DIR="/tmp/_${PKG_NAME}"
PKG_DIR="/tmp/_${PKG_NAME}_pkg"
PKG_DEST="/image/packages"
DATE=$(date +%Y%m%d) 
SRC=$(pwd)

# kernalver
. ./build.config

PrepareDirs() {
    for dir in $INST_DIR $PKG_DIR; do
        rm -rf "$dir"
    done
    for dir in $INST_DIR $PKG_DIR $PKG_DEST; do
        mkdir -p "$dir"
    done
}

Install() {
	if [ ! -f  ./package/opt/VirtualBox/src/vboxhost/vboxdrv.ko ]; then
		echo "Modules not built!"
		exit 1
	fi

	### what platform is this
	case "$BUILD_TARGET" in
		PPC_QORIQ)
			echo "PPC_QORIQ is unsupported platform!"
			exit 1
			;;
		X64)
			PLATFORM="x86_64"
			;;
		BROMOLOWESM|BROMOLOW)
			PLATFORM="bromolow"
			;;
		DENVERTON)
			PLATFORM="denverton"
			;;
		MARVELL_88F6281)
			echo "MARVELL_88F6281 is unsupported platform!"
			exit 1
			;;
		*)
			echo "${BUILD_TARGET} unsupported platform! Using $PLATFORM_ABBR"
			PLATFORM=$PLATFORM_ABBR
			;;
	esac
	 
	### update drivers for this version
	echo "Update drivers in ./package/drivers/${PLATFORM}/${KVER}/ with ./package/opt/VirtualBox/src/vboxhost/*.ko"
	rm -rf package/drivers/*
	mkdir -p package/drivers/${PLATFORM}/${KVER}
	cp -f package/opt/VirtualBox/src/vboxhost/*.ko package/drivers/${PLATFORM}/${KVER}/
	
	### colect package files
	cp -r package/* "${INST_DIR}/"

	# fix permissions
	chown root:root ${INST_DIR} -R
	
	# remove some files to lighten installer
	rm -rf "${INST_DIR}/opt/VirtualBox/src"
	rm -f "${INST_DIR}/opt/VirtualBox/UserManual.pdf"
	rm -f "${INST_DIR}/opt/VirtualBox/VirtualBox.chm"
	rm -f "${INST_DIR}/opt/VirtualBox/webtest"
}

GenerateINFO() {
    ### Generate INFO file
    ./INFO.sh "${DSM_SHLIB_MAJOR}.${DSM_SHLIB_MINOR}-${DSM_BUILD_NUM}" "${DATE}" > spk/INFO
    cp spk/INFO "${PKG_DIR}"
    cp spk/INFO INFO
}

InstallSynologyConfig(){
    ### Copy license
    cp -av spk/LICENSE "${PKG_DIR}"
    cp -r spk/conf/ "${PKG_DIR}"
    cp -r spk/scripts/ "${PKG_DIR}"
    cp spk/PACKAGE_ICON{,_120,_256}.PNG "${PKG_DIR}"
    cp -r spk/WIZARD_UIFILES/ "${PKG_DIR}"
}

MakePackage() {
	[ -f /pkgscripts/include/pkg_util.sh ] && source /pkgscripts/include/pkg_util.sh
	[ -f /pkgscripts-ng/include/pkg_util.sh ] && source /pkgscripts-ng/include/pkg_util.sh
	[ -f build.config ] && source build.config

    ### fix permissions
    chown root:root $PKG_DIR/* -R
	chmod 755 ${PKG_DIR}/scripts/*
	chmod 755 ${PKG_DIR}/WIZARD_UIFILES/*	

    pkg_make_package $INST_DIR $PKG_DIR
    pkg_make_spk $PKG_DIR $PKG_DEST  ${PKG_NAME}-${PLATFORM}-${VirtualBoxVersion}.spk
}

main() {
    PrepareDirs
    Install
    GenerateINFO
    InstallSynologyConfig
    MakePackage 
}

main "$@"
